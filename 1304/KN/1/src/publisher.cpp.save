#include <ros/ros.h>
#in
clude "geometry_msgs/Twist.h"

int main (int argc, char **argv) {
        ros::init(argc, argv, "hello_world");
        ros::NodeHandle nh;

        ROS_INFO_STREAM("Hello, ROS!");

	ros::Publisher velo_publisher = nh.advertise<geometry_msgs::Twist>("/turtle1/cmd_vel", 1000);
	ros::Rate looop_rate(1);

	srand(time(NULL));

	while(ros::ok) {

		geometry_msgs::Twist vel_msg;
		vel_msg.linear.x = (double) (rand() & 10 + 1) / 4.0;
		vel_msg.linear.y = 0;
		vel_msg.linear.z = 0;

		vel_msg.angular.x = 0;
		vel_msg.angular.y = 0;
		vel_msg.angular.z = (double) (rand() % 10 - 5) / 2.5;

		ROS_INFO("Random walk: x = %.2f, ang.z %.2f\n", vel_msg.linear.x, vel_msg.angular.z);
		velo_publisher.publish(vel_msg);
		ros::splitOnce();
		loop_rate.sleep();
	}
}

